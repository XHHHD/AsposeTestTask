@model AsposeTestTask.DTO.Person.Responses.ReadPersonResponseDTO

@{
    ViewData["Title"] = "ReadPerson";
}

<h1>ReadPerson</h1>

<div>
    <h4>Person Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PersonId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PersonId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PersonName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PersonName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Salary)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Salary)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfHire)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfHire)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Role)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Role)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Boss)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Boss != null)
            {
                <p>PersonId: @Model.Boss.PersonId</p>
                <p>PersonName: @Model.Boss.PersonName</p>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Company)
        </dt>
        <dd class="col-sm-10">
            <p>CompanyId: @Model.Company.CompanyId</p>
            <p>CompanyName: @Model.Company.CompanyName</p>
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "EditPerson", new { personId = Model.PersonId }) |
    @Html.ActionLink("Back to list", "PersonList", "Person", null)
</div>